@using BlakePlugin.DocsRenderer.Types
@using Microsoft.AspNetCore.Components.Routing
<div class="bdr-sidebar bg-light border-end p-3 d-none d-lg-block bdr-left-sidebar">
    <h5>@Title</h5>
    <nav id="bdr-site-toc" class="bdr-site-toc nav flex-column">
        @foreach (var node in Nodes)
        {
            var expanded = IsExpanded(node);
            var active = IsActive(node);

            var navLinkClass = active ? "nav-link active" : "nav-link";

            <div class="module">
                <a class="nav-link bdr-node-title" href="#" data-bs-toggle="collapse" data-bs-target="#module-@node.Id">
                    <span class="bi @(expanded ? "bi-chevron-down" : "bi-chevron-right") me-2"></span>@node.Text
                </a>
                <div id="module-@node.Id" class="collapse @(expanded ? "show" : "") ps-2" >
                    <nav class="nav flex-column bdr-module-pages">
                        @foreach (var child in node.Children)
                        {
                            <NavLink class="@navLinkClass" href="@child.Slug" data-page-id="@child.Id">@child.Text</NavLink>
                        }
                    </nav>
                </div>
            </div>
        }
    </nav>
</div>

@code {
    [Parameter]
    public string Title { get; set; } = "Site Contents";

    [Parameter]
    public required List<TocNode> Nodes { get; set; }

    [Parameter]
    public required string ActiveSlug { get; set; }

    private bool IsExpanded(TocNode node) =>
        !string.IsNullOrEmpty(ActiveSlug) &&
        ActiveSlug.StartsWith(node.Slug, StringComparison.OrdinalIgnoreCase);

    private bool IsActive(TocNode node) =>
        string.Equals(ActiveSlug, node.Slug, StringComparison.OrdinalIgnoreCase);
}