@using BlakePlugin.DocsRenderer.Types
<div class="sidebar bg-light border-end p-3 d-none d-lg-block left-sidebar">
    <h5>@Title</h5>
    <nav id="course-toc" class="course-toc nav flex-column">
        @foreach (var module in Nodes)
        {
            <div class="module">
                <a class="nav-link module-title" href="#" data-bs-toggle="collapse" data-bs-target="#module-@module.Id">
                    <i class="bi bi-chevron-@(module.Id == ActiveSlug ? "down" : "right") me-2"></i>@module.Text
                </a>
                <div id="module-@module.Id" class="collapse @(module.Id == ActiveSlug ? "show" : "") ps-2" >
                    <nav class="nav flex-column module-pages">
                        @foreach (var chapter in module.Children)
                        {
                            <a class="nav-link @(IsActive(chapter) ? "active" : "")" href="/Content/CourseContent?pageId=@chapter.Id" data-page-id="@chapter.Id">@chapter.Text</a>
                        }
                    </nav>
                </div>
            </div>
        }
    </nav>
</div>

@code {
    [Parameter]
    public string Title { get; set; } = "Site Contents";

    [Parameter]
    public required List<TocNode> Nodes { get; set; }

    [Parameter]
    public required string ActiveSlug { get; set; }

    private bool IsExpanded(TocNode node) =>
        !string.IsNullOrEmpty(ActiveSlug) &&
        ActiveSlug.StartsWith(node.Slug, StringComparison.OrdinalIgnoreCase);

    private bool IsActive(TocNode node) =>
        string.Equals(ActiveSlug, node.Slug, StringComparison.OrdinalIgnoreCase);
}