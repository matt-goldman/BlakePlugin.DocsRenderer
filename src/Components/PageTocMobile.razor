@using BlakePlugin.DocsRenderer.Types

<div class="d-lg-none bdr-page-toc-mobile">
    <h6 class="text-muted text-uppercase small fw-bold mb-3">On This Page</h6>
    <nav class="nav flex-column">
        <ul class="bdr-page-toc-list">
            @foreach (var pageSection in PageSections)
            {
                <li class="bdr-page-toc-item">
                    @if (pageSection.Children != null && pageSection.Children.Count > 0)
                    {
                        <div class="bdr-toc-row d-flex align-items-center" 
                             @onclick="() => ToggleExpanded(pageSection.Id)"
                             role="button" 
                             tabindex="0">
                            <a href="@("#" + pageSection.Id)" class="bdr-toc-link flex-grow-1" @onclick:stopPropagation="true">
                                @pageSection.Text
                            </a>
                            <span class="bdr-chevron bi @(IsExpanded(pageSection.Id) ? "bi-chevron-down" : "bi-chevron-right") ms-2"></span>
                        </div>
                        
                        @if (IsExpanded(pageSection.Id))
                        {
                            <ul class="bdr-page-toc-children ms-3 mt-1">
                                @foreach (var child in pageSection.Children)
                                {
                                    <li class="bdr-page-toc-child-item">
                                        <a href="@("#" + child.Id)" class="bdr-toc-link">
                                            @child.Text
                                        </a>
                                    </li>
                                }
                            </ul>
                        }
                    }
                    else
                    {
                        <a href="@("#" + pageSection.Id)" class="bdr-toc-link">
                            @pageSection.Text
                        </a>
                    }
                </li>
            }
        </ul>
    </nav>
</div>

@code {
    [Parameter]
    public required List<Section> PageSections { get; set; }

    private HashSet<string> ExpandedSections { get; set; } = new();

    private bool IsExpanded(string sectionId) => ExpandedSections.Contains(sectionId);

    private void ToggleExpanded(string sectionId)
    {
        if (ExpandedSections.Contains(sectionId))
            ExpandedSections.Remove(sectionId);
        else
            ExpandedSections.Add(sectionId);
            
        StateHasChanged();
    }
}